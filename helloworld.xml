<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Eloqua Profiler"
    description="What's your prospect interested in?"
    height="600"
    author="Pras"
    author_email="prasanna.vijayakumar@eloqua.com"
    author_location="Tdot">

    <!-- Declare feature dependencies. -->

    <!-- This one is not specific to Gmail contextual gadgets. -->
    <Require feature="dynamic-height"/>

    <!-- The next feature, Caja, is optional, and is supported for
     use only within test domains. Uncomment the tag only for
     non-production gadgets. -->
    <!-- <Require feature="caja"/> -->

    <!-- The next feature, google.contentmatch, is required for all
     Gmail contextual gadgets.
     <Param> - specify one or more comma-separated extractor IDs in
     a param named "extractors". This line is overridden by the extractor ID
     in the manifest, but is still expected to be present. -->
    <!--Require feature="google.contentmatch">
      <Param name="extractors">
        google.com:HelloWorld
      </Param>
    </Require-->

    <Require feature="google.contentmatch">
      <Param name="extractors">
        google.com:MessageIDExtractor,google.com:SenderEmailExtractor,google.com:RawSubjectExtractor,google.com:RecipientEmailExtractor
      </Param>
    </Require>

  </ModulePrefs>

  <!-- Define the content type and display location. The settings
   "html" and "card" are required for all Gmail contextual gadgets. -->
  <!-- Content type="html" view="card">
    <![CDATA[
      < Start with Single Sign-On >
      <script type="text/javascript" src="http://example.com/gadgets/sso.js"></script>
      <script type="text/javascript">

        < Fetch the array of content matches. >
        matches = google.contentmatch.getContentMatches();
        var matchList = document.createElement('UL');
        var listItem;
        var extractedText;

        < Iterate through the array and display output for each match. >
        for (var match in matches) {
          for (var key in matches[match]) {
            listItem = document.createElement('LI');
            extractedText = document.createTextNode(key + "> " + matches[match][key]);
            listItem.appendChild(extractedText);
            matchList.appendChild(listItem);
          }
        }
        document.body.appendChild(matchList);
        gadgets.window.adjustHeight(100);
      </script>
    ]]>
  </Content -->
  <Content type="html" view="card">
 <!--[<span class="hiddenSpellError" pre=""-->CDATA[
<script type="text/javascript">// <![CDATA[
src</span>="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js" type="text/javascript">
// ]]></script>

    <script type="text/javascript">
      
      var allemails;

      <!--Fetch the array of content matches.-->
      matches = google.contentmatch.getContentMatches();
      
      for(var match in matches)
      {
        for (var key in matches[match])
        {
          if(key== 'sender_email')
          {
            allemails.push(matches[matches][key]);
          }

          if(key == 'recipient_email')
          {
            allemails.push(matches[matches][key]);
          }
        }
      }

      if(allemails.length > 0)
      {
        $("(select id="<span class=&qout;hiddenSpellError&quot;pre=&quot;&quot;>emailList</span>" name="emailList">").appendTo("#myForm");
      </select>

        for(i-0;i)
          {
            $("").val(allemails[i].html(allemails[i]).appendTo("#emailList");
          }
          $("<input_id="<span class=&quot;hiddenSpellError&quot;pre=&quot;>&quot;>showbtn</span>" type="submit" name="submit" value="Show in Profiler" />").appendTo("#myForm");
      }

      if(allemails.length !=0)
      {
        var contact = getListValue();
      }

      //Ajax stuff for button
      $('#showbtn').click(function(){//$('input[type=submit]', this).attr('disabled','disabled');
        var emailAddy = 'emailAddress' + contact;
        $.ajax({
                  type: 'GET',
                  data: emailAddy,
                  cahce: false,
                  contentType: "application/json",
                  dataType: "jsonp",
                  url: "https://secure.eloqua.com/pp/pp.aspx?",
               });
        return false;
        });
      });

      adjustPageHeight();

      //This adjusts the size of the window that will carry the button and list
      function adjustPageHeight()
      {
        gadgets.window.adjustHeight(50);
        setTimeout('adjustPageHeight()',1000);
      }

      //Counts the number of items in the drop down list
      function getListValue()
      {
        var val = document.getElementById("emailList");
        var email = val.options[val.selectedIndex].value;
        return email;
      }


    </script>
    
    <form id="myForm">
    </form>

      
    <!--iframe border="0" height="600" width="800" src="https://secure.eloqua.com/pp/pp.aspx?emailAddress="-->

  ]]>



  </Content>

</Module>